{"version":3,"sources":["components/auth/Login.js","helpers/Validators.js"],"names":["Login","history","useHistory","container","useRef","useForm","resolver","yupResolver","loginSchema","register","handleSubmit","errors","formState","onSubmit","data","a","AuthService","login","push","window","location","reload","handleSocialLogin","user","err","google","token","_token","idToken","res","localStorage","setItem","firstTime","swal","console","log","useEffect","isLoggedIn","lottie","loadAnimation","current","render","loop","autoplay","animationData","require","className","ref","to","htmlFor","id","placeholder","email","role","message","type","password","provider","appId","callback","yup","shape","required","min","forgotSchema","registerSchema","username","confirmPassword","oneOf","resetSchema","editSchema","mobileSchema","mobile","matches","otp"],"mappings":"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","file":"static/js/7.4ddc2708.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport lottie from \"lottie-web\";\r\nimport swal from \"sweetalert\";\r\n\r\nimport { OldSocialLogin as SocialLogin } from \"react-social-login\";\r\n\r\nimport AuthService from \"../../services/AuthService\";\r\n\r\nimport { loginSchema } from \"../../helpers/Validators\";\r\n\r\nexport default function Login() {\r\n  const history = useHistory();\r\n\r\n  const container = useRef(null);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(loginSchema),\r\n  });\r\n\r\n  const onSubmit = async (data) => {\r\n    await AuthService.login(data);\r\n    history.push(\"/profile\");\r\n    window.location.reload(false);\r\n  };\r\n\r\n  const handleSocialLogin = async (user, err) => {\r\n    if (user) {\r\n      // console.log(\"sucess\", user._token.idToken);\r\n      const res = await AuthService.google({ token: user._token.idToken });\r\n      // console.log(res.data.token);\r\n      if (res.data) {\r\n        let token = res.data.token;\r\n        localStorage.setItem(\"token\", token);\r\n        if (res.data.firstTime) {\r\n          // alert(\"Set your password first\");\r\n          swal(\"Required\", \"Set your password first\", \"info\");\r\n          history.push(\"/edit\");\r\n          window.location.reload(false);\r\n\r\n          return;\r\n        }\r\n        history.push(\"/profile\");\r\n        window.location.reload(false);\r\n      }\r\n    } else {\r\n      console.log(\"failed\", err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (AuthService.isLoggedIn()) {\r\n      history.push(\"/profile\");\r\n    }\r\n\r\n    lottie.loadAnimation({\r\n      container: container.current,\r\n      render: \"svg\",\r\n      loop: true,\r\n      autoplay: true,\r\n      animationData: require(\"../../lottie/login.json\"),\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"row pt-5\">\r\n          <div className=\"col-md-6 mx-auto\">\r\n            <div ref={container}></div>\r\n          </div>\r\n          <div className=\"col-md-6 mx-auto my-auto\">\r\n            <p className=\"mt-2 float-right\">\r\n              Need an account? <Link to=\"/register\">Click here</Link> for\r\n              register.\r\n            </p>\r\n            <br />\r\n            <div className=\"card rounded-0 w-100\">\r\n              <div className=\"card-header\">\r\n                <h3 className=\"mb-0 \">Login</h3>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input\r\n                      id=\"email\"\r\n                      className=\"form-control rounded-0\"\r\n                      placeholder=\"Enter email\"\r\n                      {...register(\"email\")}\r\n                    />\r\n                    {errors.email && (\r\n                      <div className=\"alert alert-danger mt-2\" role=\"alert\">\r\n                        {errors.email.message}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      id=\"password\"\r\n                      className=\"form-control rounded-0\"\r\n                      placeholder=\"Enter password\"\r\n                      {...register(\"password\")}\r\n                    />\r\n                    {errors.password && (\r\n                      <div className=\"alert alert-danger mt-2\">\r\n                        {errors.password.message}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <Link className=\" mt-10\" to=\"/forgot-password\">\r\n                    Forgot Password\r\n                  </Link>\r\n                  <button type=\"submit\" className=\"btn btn-success float-right\">\r\n                    Login\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n            <p className=\"text-center mt-3\">Or</p>\r\n            <SocialLogin\r\n              provider=\"google\"\r\n              appId=\"823617306530-0b264uv74c5jm32i3lmr9ipmii3hah72.apps.googleusercontent.com\"\r\n              callback={handleSocialLogin}\r\n            >\r\n              <button className=\"google btn1\" type=\"button\">\r\n                Continue with Google\r\n              </button>\r\n            </SocialLogin>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import * as yup from \"yup\";\r\n\r\nconst mobileRegExp =\r\n  /^(?:(?:\\+|0{0,2})91(\\s*|[\\-])?|[0]?)?([6789]\\d{2}([ -]?)\\d{3}([ -]?)\\d{4})$/;\r\n\r\nconst loginSchema = yup.object().shape({\r\n  email: yup.string().email(\"Invalid email format.\").required(\"Required.\"),\r\n  password: yup\r\n    .string()\r\n    .required(\"Required.\")\r\n    .min(6, \"Password should atleast 6 char long.\"),\r\n});\r\n\r\nconst forgotSchema = yup.object().shape({\r\n  email: yup.string().email(\"Invalid email format.\").required(\"Required.\"),\r\n});\r\n\r\nconst registerSchema = yup.object().shape({\r\n  email: yup.string().email(\"Invalid email format.\").required(\"Required.\"),\r\n  username: yup\r\n    .string()\r\n    .required(\"Required.\")\r\n    .min(4, \"Username should atleast 4 char long.\"),\r\n  password: yup\r\n    .string()\r\n    .required(\"Required.\")\r\n    .min(6, \"Password should atleast 6 char long.\"),\r\n  confirmPassword: yup\r\n    .string()\r\n    .required(\"Required.\")\r\n    .oneOf([yup.ref(\"password\"), null], \"Passwords must match\"),\r\n});\r\n\r\nconst resetSchema = yup.object().shape({\r\n  password: yup\r\n    .string()\r\n    .required(\"Required.\")\r\n    .min(6, \"Password should atleast 6 char long.\"),\r\n  confirmPassword: yup\r\n    .string()\r\n    .required(\"Required.\")\r\n    .oneOf([yup.ref(\"password\"), null], \"Passwords must match\"),\r\n});\r\n\r\nconst editSchema = yup.object().shape({\r\n  email: yup.string().email(\"Invalid email format.\").required(\"Required.\"),\r\n  username: yup\r\n    .string()\r\n    .required(\"Required.\")\r\n    .min(4, \"Username should atleast 4 char long.\"),\r\n  password: yup\r\n    .string()\r\n    .required(\"Required.\")\r\n    .min(6, \"Password should atleast 6 char long.\"),\r\n});\r\n\r\nconst mobileSchema = yup.object().shape({\r\n  mobile: yup\r\n    .string()\r\n    .required(\"Required.\")\r\n    .matches(mobileRegExp, \"Incorrect mobile format.\"),\r\n  otp: yup\r\n    .string()\r\n    .required(\"Required.\")\r\n    .min(5, \"Otp should atleast 5 char long.\"),\r\n});\r\n\r\nexport {\r\n  loginSchema,\r\n  forgotSchema,\r\n  registerSchema,\r\n  resetSchema,\r\n  editSchema,\r\n  mobileSchema,\r\n};\r\n"],"sourceRoot":""}