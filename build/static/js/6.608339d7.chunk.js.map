{"version":3,"sources":["components/auth/ForgotPassword.js","helpers/Validators.js"],"names":["ForgotPassword","container","useRef","useForm","resolver","yupResolver","forgotSchema","register","handleSubmit","errors","formState","onSubmit","data","a","AuthService","forgot","useEffect","lottie","loadAnimation","current","render","loop","autoplay","animationData","require","className","ref","htmlFor","id","placeholder","email","message","type","loginSchema","yup","shape","required","password","min","registerSchema","username","confirmPassword","oneOf","resetSchema","editSchema","mobileSchema","mobile","matches","otp"],"mappings":"467EASe,SAASA,IACtB,IAAMC,EAAYC,iBAAO,MAEzB,EAIIC,YAAQ,CACVC,SAAUC,YAAYC,OAJtBC,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OAKTE,EAAQ,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sEACTC,IAAYC,OAAOH,GADV,2CAAH,sDAcd,OAVAI,qBAAU,WACRC,IAAOC,cAAc,CACnBjB,UAAWA,EAAUkB,QACrBC,OAAQ,MACRC,MAAM,EACNC,UAAU,EACVC,cAAeC,EAAQ,SAExB,IAGD,mCACE,qBAAKC,UAAU,YAAf,SACE,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,qBAAKC,IAAKzB,MAEZ,qBAAKwB,UAAU,2BAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,qBAAKA,UAAU,cAAf,SACE,oBAAIA,UAAU,OAAd,+BAEF,qBAAKA,UAAU,YAAf,SACE,uBAAMA,UAAU,OAAOd,SAAUH,EAAaG,GAA9C,UACE,sBAAKc,UAAU,aAAf,UACE,uBAAOE,QAAQ,QAAf,mBACA,mCACEC,GAAG,QACHH,UAAU,yBACVI,YAAY,0BACRtB,EAAS,WAEdE,EAAOqB,OACN,qBAAKL,UAAU,0BAAf,SACGhB,EAAOqB,MAAMC,aAIpB,oBAAIN,UAAU,OAAd,+DAGA,wBAAQO,KAAK,SAASP,UAAU,8BAAhC,0C,gCCjElB,wNAKMQ,EAAcC,MAAaC,MAAM,CACrCL,MAAOI,MAAaJ,MAAM,yBAAyBM,SAAS,aAC5DC,SAAUH,MAEPE,SAAS,aACTE,IAAI,EAAG,0CAGNhC,EAAe4B,MAAaC,MAAM,CACtCL,MAAOI,MAAaJ,MAAM,yBAAyBM,SAAS,eAGxDG,EAAiBL,MAAaC,MAAM,CACxCL,MAAOI,MAAaJ,MAAM,yBAAyBM,SAAS,aAC5DI,SAAUN,MAEPE,SAAS,aACTE,IAAI,EAAG,wCACVD,SAAUH,MAEPE,SAAS,aACTE,IAAI,EAAG,wCACVG,gBAAiBP,MAEdE,SAAS,aACTM,MAAM,CAACR,IAAQ,YAAa,MAAO,0BAGlCS,EAAcT,MAAaC,MAAM,CACrCE,SAAUH,MAEPE,SAAS,aACTE,IAAI,EAAG,wCACVG,gBAAiBP,MAEdE,SAAS,aACTM,MAAM,CAACR,IAAQ,YAAa,MAAO,0BAGlCU,EAAaV,MAAaC,MAAM,CACpCL,MAAOI,MAAaJ,MAAM,yBAAyBM,SAAS,aAC5DI,SAAUN,MAEPE,SAAS,aACTE,IAAI,EAAG,wCACVD,SAAUH,MAEPE,SAAS,aACTE,IAAI,EAAG,0CAGNO,EAAeX,MAAaC,MAAM,CACtCW,OAAQZ,MAELE,SAAS,aACTW,QAzDH,8EAyDyB,4BACzBC,IAAKd,MAEFE,SAAS,aACTE,IAAI,EAAG","file":"static/js/6.608339d7.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport lottie from \"lottie-web\";\r\n\r\nimport AuthService from \"../../services/AuthService\";\r\n\r\nimport { forgotSchema } from \"../../helpers/Validators\";\r\n\r\nexport default function ForgotPassword() {\r\n  const container = useRef(null);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(forgotSchema),\r\n  });\r\n\r\n  const onSubmit = async (data) => {\r\n    await AuthService.forgot(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    lottie.loadAnimation({\r\n      container: container.current,\r\n      render: \"svg\",\r\n      loop: true,\r\n      autoplay: true,\r\n      animationData: require(\"../../lottie/forget-password.json\"),\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"row pt-5\">\r\n          <div className=\"col-md-6 mx-auto\">\r\n            <div ref={container}></div>\r\n          </div>\r\n          <div className=\"col-md-6 mx-auto my-auto\">\r\n            <div className=\"card rounded-0\">\r\n              <div className=\"card-header\">\r\n                <h3 className=\"mb-0\">Forgot Password</h3>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input\r\n                      id=\"email\"\r\n                      className=\"form-control rounded-0\"\r\n                      placeholder=\"Enter registered email\"\r\n                      {...register(\"email\")}\r\n                    />\r\n                    {errors.email && (\r\n                      <div className=\"alert alert-danger mt-2\">\r\n                        {errors.email.message}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <h5 className=\"mt-3\">\r\n                    A password reset link will be sent to your email.\r\n                  </h5>\r\n                  <button type=\"submit\" className=\"btn btn-success float-right\">\r\n                    Send Link\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import * as yup from \"yup\";\r\n\r\nconst mobileRegExp =\r\n  /^(?:(?:\\+|0{0,2})91(\\s*|[\\-])?|[0]?)?([6789]\\d{2}([ -]?)\\d{3}([ -]?)\\d{4})$/;\r\n\r\nconst loginSchema = yup.object().shape({\r\n  email: yup.string().email(\"Invalid email format.\").required(\"Required.\"),\r\n  password: yup\r\n    .string()\r\n    .required(\"Required.\")\r\n    .min(6, \"Password should atleast 6 char long.\"),\r\n});\r\n\r\nconst forgotSchema = yup.object().shape({\r\n  email: yup.string().email(\"Invalid email format.\").required(\"Required.\"),\r\n});\r\n\r\nconst registerSchema = yup.object().shape({\r\n  email: yup.string().email(\"Invalid email format.\").required(\"Required.\"),\r\n  username: yup\r\n    .string()\r\n    .required(\"Required.\")\r\n    .min(4, \"Username should atleast 4 char long.\"),\r\n  password: yup\r\n    .string()\r\n    .required(\"Required.\")\r\n    .min(6, \"Password should atleast 6 char long.\"),\r\n  confirmPassword: yup\r\n    .string()\r\n    .required(\"Required.\")\r\n    .oneOf([yup.ref(\"password\"), null], \"Passwords must match\"),\r\n});\r\n\r\nconst resetSchema = yup.object().shape({\r\n  password: yup\r\n    .string()\r\n    .required(\"Required.\")\r\n    .min(6, \"Password should atleast 6 char long.\"),\r\n  confirmPassword: yup\r\n    .string()\r\n    .required(\"Required.\")\r\n    .oneOf([yup.ref(\"password\"), null], \"Passwords must match\"),\r\n});\r\n\r\nconst editSchema = yup.object().shape({\r\n  email: yup.string().email(\"Invalid email format.\").required(\"Required.\"),\r\n  username: yup\r\n    .string()\r\n    .required(\"Required.\")\r\n    .min(4, \"Username should atleast 4 char long.\"),\r\n  password: yup\r\n    .string()\r\n    .required(\"Required.\")\r\n    .min(6, \"Password should atleast 6 char long.\"),\r\n});\r\n\r\nconst mobileSchema = yup.object().shape({\r\n  mobile: yup\r\n    .string()\r\n    .required(\"Required.\")\r\n    .matches(mobileRegExp, \"Incorrect mobile format.\"),\r\n  otp: yup\r\n    .string()\r\n    .required(\"Required.\")\r\n    .min(5, \"Otp should atleast 5 char long.\"),\r\n});\r\n\r\nexport {\r\n  loginSchema,\r\n  forgotSchema,\r\n  registerSchema,\r\n  resetSchema,\r\n  editSchema,\r\n  mobileSchema,\r\n};\r\n"],"sourceRoot":""}