{"version":3,"sources":["components/auth/Register.js","helpers/Validators.js"],"names":["Register","history","useHistory","container","useRef","useForm","resolver","yupResolver","registerSchema","register","handleSubmit","errors","formState","onSubmit","data","a","AuthService","push","window","location","reload","useEffect","isLoggedIn","lottie","loadAnimation","current","render","loop","autoplay","animationData","require","className","ref","htmlFor","id","placeholder","email","message","username","type","password","confirmPassword","to","loginSchema","yup","shape","required","min","forgotSchema","oneOf","resetSchema","editSchema","mobileSchema","mobile","matches","otp"],"mappings":"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","file":"static/js/8.d772e991.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport lottie from \"lottie-web\";\r\n\r\nimport AuthService from \"../../services/AuthService\";\r\n\r\nimport { registerSchema } from \"../../helpers/Validators\";\r\n\r\nexport default function Register() {\r\n  const history = useHistory();\r\n\r\n  const container = useRef(null);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(registerSchema),\r\n  });\r\n\r\n  const onSubmit = async (data) => {\r\n    await AuthService.register(data);\r\n    history.push(\"/profile\");\r\n    window.location.reload(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (AuthService.isLoggedIn()) {\r\n      history.push(\"/profile\");\r\n    }\r\n\r\n    lottie.loadAnimation({\r\n      container: container.current,\r\n      render: \"svg\",\r\n      loop: true,\r\n      autoplay: true,\r\n      animationData: require(\"../../lottie/register.json\"),\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"row pt-5\">\r\n          <div className=\"col-md-6 mx-auto\">\r\n            <div ref={container}></div>\r\n          </div>\r\n          <div className=\"col-md-6 mx-auto my-auto\">\r\n            <div className=\"card rounded-0\">\r\n              <div className=\"card-header\">\r\n                <h3 className=\"mb-0 \">Register</h3>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input\r\n                      id=\"email\"\r\n                      className=\"form-control rounded-0\"\r\n                      placeholder=\"Enter email\"\r\n                      {...register(\"email\")}\r\n                    />\r\n                    {errors.email && (\r\n                      <div className=\"alert alert-danger mt-2\">\r\n                        {errors.email.message}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"username\">Username</label>\r\n                    <input\r\n                      id=\"username\"\r\n                      className=\"form-control rounded-0\"\r\n                      placeholder=\"Enter username\"\r\n                      {...register(\"username\")}\r\n                    />\r\n                    {errors.username && (\r\n                      <div className=\"alert alert-danger mt-2\">\r\n                        {errors.username.message}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input\r\n                      id=\"password\"\r\n                      type=\"password\"\r\n                      className=\"form-control rounded-0\"\r\n                      placeholder=\"Enter password\"\r\n                      {...register(\"password\")}\r\n                    />\r\n                    {errors.password && (\r\n                      <div className=\"alert alert-danger mt-2\">\r\n                        {errors.password.message}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                    <input\r\n                      id=\"confirmPassword\"\r\n                      type=\"password\"\r\n                      className=\"form-control rounded-0\"\r\n                      placeholder=\"Confirm passwod\"\r\n                      {...register(\"confirmPassword\")}\r\n                    />\r\n                    {errors.confirmPassword && (\r\n                      <div className=\"alert alert-danger mt-2\">\r\n                        {errors.confirmPassword.message}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <button type=\"submit\" className=\"btn btn-success float-right\">\r\n                    Register\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n            <p className=\"mt-2\">\r\n              Already have an account. <Link to=\"/login\">Click here</Link> for\r\n              login.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import * as yup from \"yup\";\r\n\r\nconst mobileRegExp =\r\n  /^(?:(?:\\+|0{0,2})91(\\s*|[\\-])?|[0]?)?([6789]\\d{2}([ -]?)\\d{3}([ -]?)\\d{4})$/;\r\n\r\nconst loginSchema = yup.object().shape({\r\n  email: yup.string().email(\"Invalid email format.\").required(\"Required.\"),\r\n  password: yup\r\n    .string()\r\n    .required(\"Required.\")\r\n    .min(6, \"Password should atleast 6 char long.\"),\r\n});\r\n\r\nconst forgotSchema = yup.object().shape({\r\n  email: yup.string().email(\"Invalid email format.\").required(\"Required.\"),\r\n});\r\n\r\nconst registerSchema = yup.object().shape({\r\n  email: yup.string().email(\"Invalid email format.\").required(\"Required.\"),\r\n  username: yup\r\n    .string()\r\n    .required(\"Required.\")\r\n    .min(4, \"Username should atleast 4 char long.\"),\r\n  password: yup\r\n    .string()\r\n    .required(\"Required.\")\r\n    .min(6, \"Password should atleast 6 char long.\"),\r\n  confirmPassword: yup\r\n    .string()\r\n    .required(\"Required.\")\r\n    .oneOf([yup.ref(\"password\"), null], \"Passwords must match\"),\r\n});\r\n\r\nconst resetSchema = yup.object().shape({\r\n  password: yup\r\n    .string()\r\n    .required(\"Required.\")\r\n    .min(6, \"Password should atleast 6 char long.\"),\r\n  confirmPassword: yup\r\n    .string()\r\n    .required(\"Required.\")\r\n    .oneOf([yup.ref(\"password\"), null], \"Passwords must match\"),\r\n});\r\n\r\nconst editSchema = yup.object().shape({\r\n  email: yup.string().email(\"Invalid email format.\").required(\"Required.\"),\r\n  username: yup\r\n    .string()\r\n    .required(\"Required.\")\r\n    .min(4, \"Username should atleast 4 char long.\"),\r\n  password: yup\r\n    .string()\r\n    .required(\"Required.\")\r\n    .min(6, \"Password should atleast 6 char long.\"),\r\n});\r\n\r\nconst mobileSchema = yup.object().shape({\r\n  mobile: yup\r\n    .string()\r\n    .required(\"Required.\")\r\n    .matches(mobileRegExp, \"Incorrect mobile format.\"),\r\n  otp: yup\r\n    .string()\r\n    .required(\"Required.\")\r\n    .min(5, \"Otp should atleast 5 char long.\"),\r\n});\r\n\r\nexport {\r\n  loginSchema,\r\n  forgotSchema,\r\n  registerSchema,\r\n  resetSchema,\r\n  editSchema,\r\n  mobileSchema,\r\n};\r\n"],"sourceRoot":""}